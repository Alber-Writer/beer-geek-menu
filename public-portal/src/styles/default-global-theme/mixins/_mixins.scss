@mixin boldText() {
  font-weight: var(--fw-bold);
}

@mixin lightText() {
  font-weight: var(--fw-light);
  background-color: aqua;
}

@mixin button(
  $bgcolor: var(--color-primary),
  $textColor: var(--color-accent),
  $border: false,
  $padding: 1em,
  $borderRadius: var(--master-border-radius)
) {
  background-color: $bgcolor;
  font-size: var(--fs-md);
  color: $textColor;
  padding: 0.5em $padding 0.5em;
  border-radius: $borderRadius;
  font-weight: var(--fw-bold);
  border: none;
  transition: all ease 200ms;
  cursor: pointer;
  user-select: none;

  @if $border {
    border: 0.1rem solid $textColor;
  }

  &:active {
    transform: translateY(0.2rem);
  }
}

@mixin supports($feature, $value) {
  @supports (#{$feature}: #{$value}) {
    @content;
  }
}

@mixin hover {
  @media (hover: hover) {
    @content;
  }
}

@mixin pseudo($width, $height) {
  content: '';
  position: absolute;
  width: $width;
  height: $height;
  @content;
}

// Maybe this is not necesary, can change brakepoints values
$breakpoints: (
  movil: 320px,
  tablet: 768px,
  laptop: 1020px,
  desktop: 1440px,
);

@mixin responsive($key) {
  @if map-has-key($breakpoints, $key) {
    @media screen and (min-width: map-get($breakpoints, $key)) {
      @content;
    }
  } @else {
    @media screen and (min-width: $key) {
      @content;
    }
  }
}
